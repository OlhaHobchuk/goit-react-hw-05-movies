{"version":3,"file":"static/js/973.4f0c12dd.chunk.js","mappings":"6OACA,EAA2B,8BAA3B,EAAoE,8BAApE,EAA8G,+BAA9G,EAAwJ,8BAAxJ,EAAsM,mC,kBCGzLA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGF,GACCA,EAAQG,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACrC,OACE,gBAAIN,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXM,MAAM,MACNC,IACmB,OAAjBJ,EACIK,EADJ,0CAEuCL,GAEzCM,IAAKL,KAEP,cAAGL,UAAWC,EAAd,SAA6BI,KAC7B,eAAGL,UAAWC,EAAd,wBAA6CK,OAZbH,EAerC,OAIV,E,SC7BD,EAAgC,4BC4ChC,EArCa,WACX,OAA8BQ,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOZ,EAAP,KAAgBe,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACRJ,GAAW,IACXK,EAAAA,EAAAA,IAAeH,GACZI,MAAK,SAAAC,GACJ,IAAMC,EAAkBD,EAASlB,KAC/B,kBAA4C,CAC1CC,GADF,EAAGA,GAEDC,aAFF,EAAOA,aAGLC,KAHF,EAAqBA,KAInBC,UAJF,EAA2BA,UAA3B,IAOFQ,EAAWO,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAIC,EAAQD,EAAZ,IACXE,SAAQ,kBAAMZ,GAAW,EAAjB,GACZ,GAAE,CAACE,IAEJ,IAAMS,EAAU,SAAAD,GACdG,IAAAA,OAAAA,QAAwB,mCACzB,EAED,OACE,gCACGd,IAAW,SAACe,EAAA,EAAD,KACZ,gBAAK3B,UAAWC,EAAhB,UACE,SAACH,EAAD,CAAaC,QAASA,QAI7B,C,sDC1CD,MAAkC,gC,kBCErB4B,EAAS,WACpB,OACE,gBAAK3B,UAAWC,EAAhB,UACE,SAAC,KAAD,CACE2B,YAAY,aACZC,YAAY,IACZC,kBAAkB,OAClBvB,MAAM,KACNwB,SAAS,KAIhB,C,uJCfD,IAAMC,EAAU,mCAEHC,EAAsB,WACjC,OAAOC,MAAM,4DAAD,OACkDF,IAE3Db,MAAK,SAAAC,GAAQ,OAAIA,EAASe,MAAb,IACbhB,MAAK,SAAAiB,GAAI,OAAIA,EAAKC,OAAT,GACb,EAEYC,EAAoB,SAAAC,GAC/B,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,kBAC4DO,IAErEpB,MAAK,SAAAC,GAAQ,OAAIA,EAASe,MAAb,IACbhB,MAAK,SAAAiB,GAAI,OAAIA,EAAKC,OAAT,GACb,EAEYG,EAAiB,SAAAzB,GAC5B,OAAOmB,MAAM,sCAAD,OAC4BnB,EAD5B,oBAC+CiB,IACzDb,MAAK,SAAAC,GAAQ,OAAIA,EAASe,MAAb,GAChB,EAEYjB,EAAiB,SAAAH,GAC5B,OAAOmB,MAAM,sCAAD,OAC4BnB,EAD5B,4BACuDiB,IAEhEb,MAAK,SAAAC,GAAQ,OAAIA,EAASe,MAAb,IACbhB,MAAK,SAAAiB,GAAI,OAAIA,EAAKK,IAAT,GACb,EAEYC,EAAoB,SAAA3B,GAC/B,OAAOmB,MAAM,sCAAD,OAC4BnB,EAD5B,4BACuDiB,IAEhEb,MAAK,SAAAC,GAAQ,OAAIA,EAASe,MAAb,IACbhB,MAAK,SAAAiB,GAAI,OAAIA,EAAKC,OAAT,GACb,C","sources":["webpack://react-homework-template/./src/components/CastGallery/CastGallery.module.css?52c0","components/CastGallery/CastGallery.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Requests.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastGallery_castList__WwAao\",\"castItem\":\"CastGallery_castItem__cnogW\",\"castImage\":\"CastGallery_castImage__ZFyD+\",\"castName\":\"CastGallery_castName__Tkpun\",\"castCharacter\":\"CastGallery_castCharacter__R6kjP\"};","import PropTypes from 'prop-types';\nimport css from './CastGallery.module.css';\nimport NotFound from '../../images/NotFound.png';\n\nexport const CastGallery = ({ credits }) => {\n  return (\n    <>\n      <ul className={css.castList}>\n        {credits &&\n          credits.map(({ id, profile_path, name, character }) => {\n            return (\n              <li className={css.castItem} key={id}>\n                <img\n                  className={css.castImage}\n                  width=\"100\"\n                  src={\n                    profile_path === null\n                      ? NotFound\n                      : `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  }\n                  alt={name}\n                />\n                <p className={css.castName}>{name}</p>\n                <p className={css.castCharacter}>Character: {character}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nCastGallery.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { Loader } from '../Loader/Loader';\nimport { CastGallery } from '../CastGallery/CastGallery';\nimport { fetchMovieCast } from '../Requests';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [loading, setLoading] = useState(false);\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    fetchMovieCast(movieId)\n      .then(response => {\n        const normalizedArray = response.map(\n          ({ id, profile_path, name, character }) => ({\n            id,\n            profile_path,\n            name,\n            character,\n          })\n        );\n        setCredits(normalizedArray);\n      })\n      .catch(error => onError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  const onError = error => {\n    Notiflix.Notify.warning('Sorry, there is something wrong!');\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className={css.castContainer}>\n        <CastGallery credits={credits} />\n      </div>\n    </>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\"};","import css from './Loader.module.css';\n\nimport { RotatingLines } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <div className={css.loaderContainer}>\n      <RotatingLines\n        strokeColor=\"blueviolet\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","const API_KEY = '0133cbd46d7aed15aba1a7c05914842d';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMoviesByWord = search => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${search}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMovieInfo = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.cast);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n"],"names":["CastGallery","credits","className","css","map","id","profile_path","name","character","width","src","NotFound","alt","useState","loading","setLoading","setCredits","movieId","useParams","useEffect","fetchMovieCast","then","response","normalizedArray","catch","error","onError","finally","Notiflix","Loader","strokeColor","strokeWidth","animationDuration","visible","API_KEY","fetchTrendingMovies","fetch","json","data","results","fetchMoviesByWord","search","fetchMovieInfo","cast","fetchMovieReviews"],"sourceRoot":""}