{"version":3,"file":"static/js/423.ceaeddcb.chunk.js","mappings":"sKACA,MAAkC,gC,kBCErBA,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,aACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,uJCfD,IAAMC,EAAU,mCAEHC,EAAsB,WACjC,OAAOC,MAAM,4DAAD,OACkDF,IAE3DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,EAEYC,EAAoB,SAAAC,GAC/B,OAAOP,MAAM,qDAAD,OAC2CF,EAD3C,kBAC4DS,IAErEN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,EAEYG,EAAiB,SAAAC,GAC5B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,oBAC+CX,IACzDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYO,EAAiB,SAAAD,GAC5B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACuDX,IAEhEG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKO,IAAT,GACb,EAEYC,EAAoB,SAAAH,GAC/B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACuDX,IAEhEG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,C,6HCrCD,GAAgB,aAAe,kCAAkC,YAAc,iCAAiC,cAAgB,mCAAmC,eAAiB,qC,SCEvKQ,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,iCACE,eAAIvB,UAAWC,EAAAA,aAAf,sBACA,yBACsB,IAAnBsB,EAAQC,QACP,sEAEA,eAAIxB,UAAWC,EAAAA,YAAf,SACGsB,EAAQE,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,gBAAI5B,UAAWC,EAAAA,YAAf,WACE,eAAGD,UAAWC,EAAAA,cAAd,qBAA0C0B,MAC1C,cAAG3B,UAAWC,EAAAA,eAAd,SAAmC2B,MAFAF,EAKxC,UAMZ,E,SCxBD,EAAmC,kCCyCnC,EAlCgB,WACd,OAA8BG,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBS,EAAhB,KACQd,GAAYe,EAAAA,EAAAA,MAAZf,SAERgB,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXV,EAAAA,EAAAA,IAAkBH,GACfR,MAAK,SAAAC,GACJ,IAAMwB,EAAkBxB,EAASc,KAAI,kBAA8B,CACjEC,GADmC,EAAGA,GAEtCC,OAFmC,EAAOA,OAG1CC,QAHmC,EAAeA,QAAf,IAKrCI,EAAWG,EACZ,IACAC,OAAM,SAAAC,GAAK,OAAIC,EAAQD,EAAZ,IACXE,SAAQ,kBAAMR,GAAW,EAAjB,GACZ,GAAE,CAACb,IAEJ,IAAMoB,EAAU,SAAAD,GACdG,IAAAA,OAAAA,QAAwB,mCACzB,EAED,OACE,gCACGV,IAAW,SAAC/B,EAAA,EAAD,KACZ,gBAAKC,UAAWC,EAAhB,UACE,SAACqB,EAAD,CAAaC,QAASA,QAI7B,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Requests.jsx","webpack://react-homework-template/./src/components/ReviewsList/ReviewsList.module.css?071b","components/ReviewsList/ReviewsList.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\"};","import css from './Loader.module.css';\n\nimport { RotatingLines } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <div className={css.loaderContainer}>\n      <RotatingLines\n        strokeColor=\"blueviolet\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","const API_KEY = '0133cbd46d7aed15aba1a7c05914842d';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMoviesByWord = search => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${search}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMovieInfo = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.cast);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsTitle\":\"ReviewsList_reviewsTitle__HLzGb\",\"reviewsList\":\"ReviewsList_reviewsList__MzOw+\",\"reviewsAuthor\":\"ReviewsList_reviewsAuthor__qPgsw\",\"reviewsContent\":\"ReviewsList_reviewsContent__alm3h\"};","import PropTypes from 'prop-types';\nimport css from './ReviewsList.module.css';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      <h3 className={css.reviewsTitle}>Reviews</h3>\n      <div>\n        {reviews.length === 0 ? (\n          <p>We don't have any reviews for this movie.</p>\n        ) : (\n          <ul className={css.reviewsList}>\n            {reviews.map(({ id, author, content }) => {\n              return (\n                <li className={css.reviewsItem} key={id}>\n                  <p className={css.reviewsAuthor}>Author: {author}</p>\n                  <p className={css.reviewsContent}>{content}</p>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { Loader } from '../Loader/Loader';\nimport { ReviewsList } from '../ReviewsList/ReviewsList';\nimport { fetchMovieReviews } from '../Requests';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [loading, setLoading] = useState(false);\n  const [reviews, setRewiews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    fetchMovieReviews(movieId)\n      .then(response => {\n        const normalizedArray = response.map(({ id, author, content }) => ({\n          id,\n          author,\n          content,\n        }));\n        setRewiews(normalizedArray);\n      })\n      .catch(error => onError(error))\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  const onError = error => {\n    Notiflix.Notify.warning('Sorry, there is something wrong!');\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div className={css.reviewsContainer}>\n        <ReviewsList reviews={reviews} />\n      </div>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","API_KEY","fetchTrendingMovies","fetch","then","response","json","data","results","fetchMoviesByWord","search","fetchMovieInfo","movieId","fetchMovieCast","cast","fetchMovieReviews","ReviewsList","reviews","length","map","id","author","content","useState","loading","setLoading","setRewiews","useParams","useEffect","normalizedArray","catch","error","onError","finally","Notiflix"],"sourceRoot":""}