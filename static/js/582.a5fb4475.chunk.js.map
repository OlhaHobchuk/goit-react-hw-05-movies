{"version":3,"file":"static/js/582.a5fb4475.chunk.js","mappings":"sKACA,MAAkC,gC,kBCErBA,EAAS,WACpB,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,YAAY,aACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,C,uJCfD,IAAMC,EAAU,mCAEHC,EAAsB,WACjC,OAAOC,MAAM,4DAAD,OACkDF,IAE3DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,EAEYC,EAAoB,SAAAC,GAC/B,OAAOP,MAAM,qDAAD,OAC2CF,EAD3C,kBAC4DS,IAErEN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,EAEYG,EAAiB,SAAAC,GAC5B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,oBAC+CX,IACzDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,EAEYO,EAAiB,SAAAD,GAC5B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACuDX,IAEhEG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKO,IAAT,GACb,EAEYC,EAAoB,SAAAH,GAC/B,OAAOT,MAAM,sCAAD,OAC4BS,EAD5B,4BACuDX,IAEhEG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,OAAT,GACb,C,4HCrCD,EAAkC,4CAAlC,EAAgG,4C,SCGnFQ,EAAqB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,eAAIzB,UAAWC,EAAf,SACGsB,EAAeG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAClB,yBACE,SAAC,KAAD,CACE5B,UAAWC,EACX4B,GAAE,iBAAYF,GACdG,MAAO,CAAEC,KAAMP,GAHjB,SAKGI,KANID,EADS,KAazB,E,kBCpBD,EAAgC,4BAAhC,EAAwE,wBCmCxE,EA7Ba,WACX,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOT,EAAP,KAAuBU,EAAvB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACX3B,EAAAA,EAAAA,MACGE,MAAK,SAAA2B,GACJ,IAAMC,EAAkBD,EAAMX,KAAI,kBAAoB,CAAEE,MAAtB,EAAGA,MAA0BD,GAA7B,EAAUA,GAAV,IAElCM,EAAkBK,EACnB,IACAC,OAAM,SAAAC,GAAK,OAAIC,EAAQD,EAAZ,IACXE,SAAQ,kBAAMP,GAAW,EAAjB,GACZ,GAAE,IAEH,IAAMM,EAAU,SAAAD,GACdG,IAAAA,OAAAA,QAAwB,mCACzB,EAED,OACE,iBAAK3C,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,4BACCiC,IAAW,SAACnC,EAAA,EAAD,KACZ,SAACuB,EAAD,CAAoBC,eAAgBA,MAGzC,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Requests.jsx","webpack://react-homework-template/./src/components/TrendingMoviesList/TrendingMoviesList.module.css?d6c4","components/TrendingMoviesList/TrendingMoviesList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\"};","import css from './Loader.module.css';\n\nimport { RotatingLines } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <div className={css.loaderContainer}>\n      <RotatingLines\n        strokeColor=\"blueviolet\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","const API_KEY = '0133cbd46d7aed15aba1a7c05914842d';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMoviesByWord = search => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${search}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMovieInfo = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.cast);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trendyMovieList\":\"TrendingMoviesList_trendyMovieList__KVADW\",\"trendyMovieLink\":\"TrendingMoviesList_trendyMovieLink__u8Jkm\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './TrendingMoviesList.module.css';\n\nexport const TrendingMoviesList = ({ trendingMovies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.trendyMovieList}>\n      {trendingMovies.map(({ id, title }) => (\n        <li key={id}>\n          <Link\n            className={css.trendyMovieLink}\n            to={`movies/${id}`}\n            state={{ from: location }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nTrendingMoviesList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"homeContainer\":\"Home_homeContainer__GxC9g\",\"homeTitle\":\"Home_homeTitle__duF7K\"};","import { useState, useEffect } from 'react';\nimport Notiflix from 'notiflix';\nimport { TrendingMoviesList } from 'components/TrendingMoviesList/TrendingMoviesList';\nimport { Loader } from '../../components/Loader/Loader';\nimport { fetchTrendingMovies } from '../../components/Requests';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchTrendingMovies()\n      .then(array => {\n        const normalizedArray = array.map(({ title, id }) => ({ title, id }));\n\n        setTrendingMovies(normalizedArray);\n      })\n      .catch(error => onError(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const onError = error => {\n    Notiflix.Notify.warning('Sorry, there is something wrong!');\n  };\n\n  return (\n    <div className={css.homeContainer}>\n      <h2 className={css.homeTitle}>Trending today</h2>\n      {loading && <Loader />}\n      <TrendingMoviesList trendingMovies={trendingMovies} />\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","API_KEY","fetchTrendingMovies","fetch","then","response","json","data","results","fetchMoviesByWord","search","fetchMovieInfo","movieId","fetchMovieCast","cast","fetchMovieReviews","TrendingMoviesList","trendingMovies","location","useLocation","map","id","title","to","state","from","useState","setTrendingMovies","loading","setLoading","useEffect","array","normalizedArray","catch","error","onError","finally","Notiflix"],"sourceRoot":""}