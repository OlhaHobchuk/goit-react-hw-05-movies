{"version":3,"file":"static/js/293.c2fb23e2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/Requests.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/components/SearchResults/SearchResults.module.css?b68e","components/SearchResults/SearchResults.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderContainer\":\"Loader_loaderContainer__UDDYf\"};","import css from './Loader.module.css';\n\nimport { RotatingLines } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <div className={css.loaderContainer}>\n      <RotatingLines\n        strokeColor=\"blueviolet\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","const API_KEY = '0133cbd46d7aed15aba1a7c05914842d';\n\nexport const fetchTrendingMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMoviesByWord = search => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${search}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n\nexport const fetchMovieInfo = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  ).then(response => response.json());\n};\n\nexport const fetchMovieCast = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.cast);\n};\n\nexport const fetchMovieReviews = movieId => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n  )\n    .then(response => response.json())\n    .then(data => data.results);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"SearchForm_input__HOxJo\",\"searchFormButton\":\"SearchForm_searchFormButton__Zv-9i\"};","import { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\nimport css from './SearchForm.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [keyWord, setKeyWord] = useState('');\n\n  const handleSearchChange = event => {\n    setKeyWord(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const query = keyWord.trim().toLocaleLowerCase();\n    if (query === '') {\n      Notiflix.Notify.info('Please enter something');\n      return;\n    }\n\n    onSubmit(query);\n\n    setKeyWord('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <input\n        name=\"keyWord\"\n        className={css.input}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={handleSearchChange}\n      />\n      <button type=\"submit\" className={css.searchFormButton}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchMovieContainer\":\"SearchResults_searchMovieContainer__KJqlq\",\"searchMovieTitle\":\"SearchResults_searchMovieTitle__9rzGe\",\"searchMovieList\":\"SearchResults_searchMovieList__rNRXq\",\"searchMovieLink\":\"SearchResults_searchMovieLink__htLAX\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './SearchResults.module.css';\n\nexport const SearchResults = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.length > 0 && (\n        <div className={css.searchMovieContainer}>\n          <h2 className={css.searchMovieTitle}>Search results</h2>\n          <ul className={css.searchMovieList}>\n            {movies.map(({ id, title }) => (\n              <li className={css.searchMovieItem} key={id}>\n                <Link\n                  className={css.searchMovieLink}\n                  to={`/movies/${id}`}\n                  state={{ from: location }}\n                >\n                  {title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nSearchResults.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { Loader } from '../../components/Loader/Loader';\nimport { fetchMoviesByWord } from '../../components/Requests';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { SearchResults } from '../../components/SearchResults/SearchResults';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    setLoading(true);\n    fetchMoviesByWord(query)\n      .then(moviesArray => {\n        if (moviesArray.length === 0) {\n          Notiflix.Notify.info(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          return;\n        }\n        const normalizedArray = moviesArray.map(({ title, id }) => ({\n          title,\n          id,\n        }));\n        setMovies(normalizedArray);\n      })\n      .catch(error => onError(error))\n      .finally(() => setLoading(false));\n  }, [query]);\n\n  const handleSubmit = search => {\n    setSearchParams({ query: search });\n    setMovies([]);\n  };\n\n  const onError = error => {\n    Notiflix.Notify.warning(\n      'Sorry, there are no movies matching your search query. Please try again.'\n    );\n  };\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} setSearchParams={setSearchParams} />\n      <SearchResults movies={movies} />\n      {loading && <Loader />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","API_KEY","fetchTrendingMovies","fetch","then","response","json","data","results","fetchMoviesByWord","search","fetchMovieInfo","movieId","fetchMovieCast","cast","fetchMovieReviews","SearchForm","onSubmit","useState","keyWord","setKeyWord","event","preventDefault","query","trim","toLocaleLowerCase","Notiflix","name","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","SearchResults","movies","location","useLocation","length","map","id","title","to","state","from","setMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","moviesArray","normalizedArray","catch","error","onError","finally"],"sourceRoot":""}